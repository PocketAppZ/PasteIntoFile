<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="next" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\next.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="next1" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\next.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="str_message_register_filename_success" xml:space="preserve">
    <value>Filename-template has been registered</value>
  </data>
  <data name="str_save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="str_filename" xml:space="preserve">
    <value>Filename</value>
  </data>
  <data name="str_extension" xml:space="preserve">
    <value>Extension</value>
  </data>
  <data name="str_location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="str_ellipsis" xml:space="preserve">
    <value>...</value>
  </data>
  <data name="str_main_window_title" xml:space="preserve">
    <value>Paste Into File</value>
  </data>
  <data name="str_message_unregister_context_menu_success" xml:space="preserve">
    <value>Explorer context menu entry has been removed</value>
  </data>
  <data name="str_message_run_as_admin" xml:space="preserve">
    <value>Please run the application as Administrator!</value>
  </data>
  <data name="str_message_register_context_menu_success" xml:space="preserve">
    <value>Explorer context menu entry has been added</value>
  </data>
  <data name="str_contextentry" xml:space="preserve">
    <value>Paste Into File</value>
  </data>
  <data name="str_message_first_time" xml:space="preserve">
    <value>It seems that you are running this application for the first time,
do you want to add an entry to the explorer context menu?</value>
  </data>
  <data name="str_type_txt" xml:space="preserve">
    <value>Text file</value>
  </data>
  <data name="str_type_img" xml:space="preserve">
    <value>Image file</value>
  </data>
  <data name="str_type_unknown" xml:space="preserve">
    <value>Unknown file</value>
  </data>
  <data name="str_select_folder" xml:space="preserve">
    <value>Select a folder for saving this file </value>
  </data>
  <data name="str_message_help" xml:space="preserve">
    <value>Paste Into File helps you paste any text or images in your system clipboard into a file directly instead of creating new file yourself
      
--------------------
      
To Register the application to your system context menu run the program as administrator with this argument : /reg
to Unregister the application use this argument : /unreg
To change the format of the default filename, use this argument: /filename "yyyy-MM-dd HH-mm-ss"

--------------------

https://gitlab.com/fsorge/PasteIntoFile
Send Feedback to: contact@francescosorge.com
Thanks :)</value>
  </data>
  <data name="str_autosave" xml:space="preserve">
    <value>Autosave</value>
  </data>
  <data name="str_autosave_balloontext" xml:space="preserve">
    <value>Clipboard content has been automatically saved as {0}</value>
  </data>
  <data name="str_autosave_infotext" xml:space="preserve">
    <value>PasteIntoFile will automatically save files without showing a dialog anymore. If you want to show the main window again, you will have to delete this file: {0}</value>
  </data>
  <data name="str_noclip_text" xml:space="preserve">
    <value>Clipboard is empty</value>
  </data>
  <data name="str_firstlaunch_welcome" xml:space="preserve">
    <value>Welcome to
Paste Into File</value>
  </data>
  <data name="str_firstlaunch_maintainer" xml:space="preserve">
    <value>Improved and maintained by Francesco Sorge</value>
  </data>
  <data name="str_firstlaunch_creator" xml:space="preserve">
    <value>Originally created by Eslam Hamouda</value>
  </data>
  <data name="str_contextentry_register" xml:space="preserve">
    <value>Register context menu entry</value>
  </data>
  <data name="str_contextentry_unregister" xml:space="preserve">
    <value>Unregister context menu entry</value>
  </data>
  <data name="str_no" xml:space="preserve">
    <value>No, thanks</value>
  </data>
  <data name="str_clear_clipboard" xml:space="preserve">
    <value>Clear clipboard</value>
  </data>
  <data name="str_main_info" xml:space="preserve">
    <value>Forked and improved by Francesco Sorge</value>
  </data>
  <data name="str_main_info_url" xml:space="preserve">
    <value>www.francescosorge.com</value>
  </data>
  <data name="str_firstlaunch_register_explain" xml:space="preserve">
    <value>By adding an entry to the File Explorer context menu, you can quickly paste clipboard contents into a file by right-clicking on your desktop or in any folder, and choosing '{0}'.</value>
  </data>
  <data name="str_firstlaunch_register" xml:space="preserve">
    <value>Add context menu entry?</value>
  </data>
  <data name="str_firstlaunch_windowtitle" xml:space="preserve">
    <value>Paste Into File – First Launch</value>
  </data>
  <data name="str_autosave_balloontitle" xml:space="preserve">
    <value>Clipboard saved to file</value>
  </data>
  <data name="str_firstlaunch_maintainer_link" xml:space="preserve">
    <value>https://gitlab.com/fsorge/PasteIntoFile</value>
  </data>
  <data name="str_firstlaunch_creator_link" xml:space="preserve">
    <value>https://github.com/EslaMx7/PasteIntoFile</value>
  </data>
</root>